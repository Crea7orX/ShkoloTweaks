name: Build & Release Chrome Extension

on:
  push:
    branches:
      - main

permissions:
  contents: write

jobs:
  build-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Build Chrome Extension
        run: |
          python Tools/build_extension.py

      - name: Install jq & GitHub CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y jq gh

      - name: Get version from manifest.json
        id: manifest
        run: |
          VERSION=$(jq -r .version dist/extension/manifest.json)
          echo "Extension version: $VERSION"
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Get latest GitHub release version
        id: latest_release
        run: |
          LATEST=$(gh release list --limit 1 --json tagName --jq '.[0].tagName' || echo "none")
          echo "Latest release tag: $LATEST"
          echo "latest=$LATEST" >> $GITHUB_OUTPUT
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Check if version changed
        id: check_version
        run: |
          if [[ "v${{ steps.manifest.outputs.version }}" == "${{ steps.latest_release.outputs.latest }}" ]]; then
            echo "Version unchanged, skipping release."
            echo "release=false" >> $GITHUB_OUTPUT
          else
            echo "New version detected."
            echo "release=true" >> $GITHUB_OUTPUT
          fi

      - name: Zip extension files
        run: |
          cd dist/extension
          zip -r ../../extension.zip .
          cd ../..

      - name: Create GitHub Release
        if: steps.check_version.outputs.release == 'true'
        uses: softprops/action-gh-release@v2
        with:
          name: v${{ steps.manifest.outputs.version }} - Auto Release - ${{ github.sha }}
          tag_name: v${{ steps.manifest.outputs.version }}-auto-${{ github.sha }}
          files: extension.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
